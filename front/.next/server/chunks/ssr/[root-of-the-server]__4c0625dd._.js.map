{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/joaov/OneDrive/%C3%81rea%20de%20Trabalho/programa%C3%A7%C3%A3o/trilha/projeto3-trilha/front/src/services/api.ts"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.NEXT_PUBLIC_API_URL || \"http://127.0.0.1:8000\", \r\n});\r\n\r\nexport const registerUser = async (username: string, password: string) => {\r\n  const response = await api.post(\"/users/register\", { username, password });\r\n  return response.data;\r\n};\r\n\r\nexport const loginUser = async (username: string, password: string) => {\r\n  const response = await api.post(\"/users/login\", { username, password });\r\n  return response.data;\r\n};\r\n\r\nexport const fetchPosts = async () => {\r\n  const response = await api.get(\"/posts/feed\");\r\n  return response.data;\r\n};\r\n\r\nexport default api;"],"names":[],"mappings":";;;;;;AAAA;;AAEA,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,SAAS,6DAAmC;AAC9C;AAEO,MAAM,eAAe,OAAO,UAAkB;IACnD,MAAM,WAAW,MAAM,IAAI,IAAI,CAAC,mBAAmB;QAAE;QAAU;IAAS;IACxE,OAAO,SAAS,IAAI;AACtB;AAEO,MAAM,YAAY,OAAO,UAAkB;IAChD,MAAM,WAAW,MAAM,IAAI,IAAI,CAAC,gBAAgB;QAAE;QAAU;IAAS;IACrE,OAAO,SAAS,IAAI;AACtB;AAEO,MAAM,aAAa;IACxB,MAAM,WAAW,MAAM,IAAI,GAAG,CAAC;IAC/B,OAAO,SAAS,IAAI;AACtB;uCAEe","debugId":null}},
    {"offset": {"line": 163, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/joaov/OneDrive/%C3%81rea%20de%20Trabalho/programa%C3%A7%C3%A3o/trilha/projeto3-trilha/front/src/app/home/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport Image from \"next/image\";\r\nimport { fetchPosts } from \"../../services/api\"; // Certifique-se de que este fetch funciona\r\n\r\ninterface Post {\r\n  id: number;\r\n  content: string;\r\n  user_id: number;\r\n  image_url?: string;\r\n  video_url?: string;\r\n  likes: number;\r\n  dislikes: number;\r\n}\r\n\r\nexport default function Home() {\r\n  const [posts, setPosts] = useState<Post[]>([]);\r\n  const [newPost, setNewPost] = useState(\"\");\r\n  const [userId, setUserId] = useState<number | null>(null);\r\n  const router = useRouter();\r\n\r\n  // Verifica se o usuário está autenticado\r\n  useEffect(() => {\r\n    const storedId = localStorage.getItem(\"authToken\");\r\n    if (!storedId) {\r\n      router.push(\"/\"); // Volta para o login\r\n    } else {\r\n      setUserId(parseInt(storedId));\r\n      fetchPosts()\r\n        .then((data) => setPosts(data))\r\n        .catch((error) => console.error(\"Erro ao carregar posts:\", error));\r\n    }\r\n  }, [router]);\r\n\r\n  const handleCreatePost = async () => {\r\n    if (!userId) return;\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"user_id\", String(userId));\r\n    formData.append(\"content\", newPost);\r\n\r\n    try {\r\n      const res = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/posts/`, {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      if (res.ok) {\r\n        const data = await res.json();\r\n        setPosts((prev) => [data, ...prev]);\r\n        setNewPost(\"\");\r\n      } else {\r\n        console.error(\"Erro ao criar post.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erro ao enviar post:\", error);\r\n    }\r\n  };\r\n\r\n  const handleLike = async (postId: number) => {\r\n    try {\r\n      // Exemplo: criar interação (deve ser implementado no backend)\r\n      await fetch(`${process.env.NEXT_PUBLIC_API_URL}/interactions/`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          post_id: postId,\r\n          user_id: userId,\r\n          type: \"like\",\r\n        }),\r\n      });\r\n\r\n      // Atualiza likes localmente\r\n      setPosts((prevPosts) =>\r\n        prevPosts.map((post) =>\r\n          post.id === postId ? { ...post, likes: post.likes + 1 } : post\r\n        )\r\n      );\r\n    } catch (err) {\r\n      console.error(\"Erro ao curtir:\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-200 text-gray-800 dark:bg-gray-800 dark:text-gray-200\">\r\n      <header className=\"bg-gray-300 dark:bg-gray-700 shadow-md p-4 flex items-center justify-between\">\r\n        <h1 className=\"text-xl font-bold\">Trilhagram</h1>\r\n        <button\r\n          onClick={() => {\r\n            localStorage.removeItem(\"authToken\");\r\n            router.push(\"/\");\r\n          }}\r\n          className=\"bg-red-500 text-white px-4 py-2 rounded\"\r\n        >\r\n          Sair\r\n        </button>\r\n      </header>\r\n\r\n      <main className=\"p-4 sm:p-8\">\r\n        <div className=\"max-w-2xl mx-auto space-y-6\">\r\n          {/* Criar Post */}\r\n          <div className=\"bg-gray-300 dark:bg-gray-700 p-4 rounded-lg shadow-md\">\r\n            <textarea\r\n              className=\"w-full p-2 border border-gray-400 dark:border-gray-600 rounded-lg\"\r\n              placeholder=\"Compartilhe algo...\"\r\n              value={newPost}\r\n              onChange={(e) => setNewPost(e.target.value)}\r\n            />\r\n            <button\r\n              className=\"mt-2 bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700\"\r\n              onClick={handleCreatePost}\r\n            >\r\n              Postar\r\n            </button>\r\n          </div>\r\n\r\n          {/* Lista de Posts */}\r\n          {posts.map((post) => (\r\n            <div\r\n              key={post.id}\r\n              className=\"bg-gray-300 dark:bg-gray-700 p-4 rounded-lg shadow-md\"\r\n            >\r\n              <div className=\"flex items-center gap-4\">\r\n                <Image\r\n                  src=\"/default-avatar.png\"\r\n                  alt=\"User Avatar\"\r\n                  width={40}\r\n                  height={40}\r\n                  className=\"rounded-full\"\r\n                />\r\n                <div>\r\n                  <h2 className=\"font-bold\">User {post.user_id}</h2>\r\n                </div>\r\n              </div>\r\n              <p className=\"mt-4\">{post.content}</p>\r\n              {post.image_url && (\r\n                <Image\r\n                  src={`${process.env.NEXT_PUBLIC_API_URL}${post.image_url}`}\r\n                  alt=\"Imagem do post\"\r\n                  width={500}\r\n                  height={300}\r\n                  className=\"rounded-lg mt-4\"\r\n                />\r\n              )}\r\n              <div className=\"mt-4 flex gap-4\">\r\n                <button\r\n                  className=\"text-blue-600 hover:underline\"\r\n                  onClick={() => handleLike(post.id)}\r\n                >\r\n                  Like ({post.likes})\r\n                </button>\r\n                <button className=\"text-red-600 hover:underline\">\r\n                  Dislike ({post.dislikes})\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}