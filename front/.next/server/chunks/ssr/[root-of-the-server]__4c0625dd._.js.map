{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/joaov/OneDrive/%C3%81rea%20de%20Trabalho/programa%C3%A7%C3%A3o/trilha/projeto3-trilha/front/src/services/api.ts"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.NEXT_PUBLIC_API_URL || \"http://127.0.0.1:8000\", \r\n});\r\n\r\nexport const registerUser = async (username: string, password: string) => {\r\n  const response = await api.post(\"/users/register\", { username, password });\r\n  return response.data;\r\n};\r\n\r\nexport const loginUser = async (username: string, password: string) => {\r\n  const response = await api.post(\"/users/login\", { username, password });\r\n  return response.data;\r\n};\r\n\r\nexport const fetchPosts = async () => {\r\n  try {\r\n    console.log(\"Chamando o endpoint:\", `${process.env.NEXT_PUBLIC_API_URL}/posts`);\r\n    const response = await axios.get(`${process.env.NEXT_PUBLIC_API_URL}/posts`);\r\n    console.log(\"Resposta recebida:\", response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Erro ao buscar posts:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const createPost = async (post: { title: string; content: string }) => {\r\n  const response = await axios.post(`${process.env.NEXT_PUBLIC_API_URL}/posts`, post);\r\n  return response.data;\r\n};\r\n\r\nexport default api;"],"names":[],"mappings":";;;;;;;AAAA;;AAEA,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,SAAS,6DAAmC;AAC9C;AAEO,MAAM,eAAe,OAAO,UAAkB;IACnD,MAAM,WAAW,MAAM,IAAI,IAAI,CAAC,mBAAmB;QAAE;QAAU;IAAS;IACxE,OAAO,SAAS,IAAI;AACtB;AAEO,MAAM,YAAY,OAAO,UAAkB;IAChD,MAAM,WAAW,MAAM,IAAI,IAAI,CAAC,gBAAgB;QAAE;QAAU;IAAS;IACrE,OAAO,SAAS,IAAI;AACtB;AAEO,MAAM,aAAa;IACxB,IAAI;QACF,QAAQ,GAAG,CAAC,wBAAwB,6DAAmC,MAAM,CAAC;QAC9E,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,6DAAmC,MAAM,CAAC;QAC3E,QAAQ,GAAG,CAAC,sBAAsB,SAAS,IAAI;QAC/C,OAAO,SAAS,IAAI;IACtB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,MAAM;IACR;AACF;AAEO,MAAM,aAAa,OAAO;IAC/B,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,6DAAmC,MAAM,CAAC,EAAE;IAC9E,OAAO,SAAS,IAAI;AACtB;uCAEe","debugId":null}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/joaov/OneDrive/%C3%81rea%20de%20Trabalho/programa%C3%A7%C3%A3o/trilha/projeto3-trilha/front/src/app/home/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { fetchPosts, createPost } from \"../../services/api\";\r\n\r\ninterface Post {\r\n  id: number;\r\n  title: string;\r\n  content: string;\r\n}\r\n\r\nexport default function HomePage() {\r\n  const [posts, setPosts] = useState<Post[]>([]);\r\n  const [newPostTitle, setNewPostTitle] = useState(\"\");\r\n  const [newPostContent, setNewPostContent] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"authToken\");\r\n    if (!token) {\r\n      router.push(\"/\"); // Redireciona para login se não estiver logado\r\n      return;\r\n    }\r\n\r\n    const loadPosts = async () => {\r\n      try {\r\n        const data = await fetchPosts();\r\n        setPosts(data);\r\n      } catch (err) {\r\n        setError(\"Erro ao carregar os posts.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadPosts();\r\n  }, [router]);\r\n\r\n  const handleCreatePost = async () => {\r\n    if (!newPostTitle || !newPostContent) {\r\n      alert(\"Preencha o título e o conteúdo do post.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const newPost = await createPost({ title: newPostTitle, content: newPostContent });\r\n      setPosts([newPost, ...posts]);\r\n      setNewPostTitle(\"\");\r\n      setNewPostContent(\"\");\r\n    } catch (err) {\r\n      setError(\"Erro ao criar o post.\");\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-100 dark:bg-gray-900 text-gray-900 dark:text-white\">\r\n        <p>Carregando feed...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-red-100 text-red-800\">\r\n        <p>{error}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 dark:bg-gray-900 text-gray-900 dark:text-white p-6\">\r\n      <h1 className=\"text-3xl font-bold mb-6\">Feed de Posts</h1>\r\n\r\n      <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-md mb-6\">\r\n        <h2 className=\"text-xl font-semibold mb-4\">Criar Novo Post</h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Título do post\"\r\n          value={newPostTitle}\r\n          onChange={(e) => setNewPostTitle(e.target.value)}\r\n          className=\"w-full p-2 mb-4 border border-gray-400 dark:border-gray-600 rounded-lg\"\r\n        />\r\n        <textarea\r\n          placeholder=\"Conteúdo do post\"\r\n          value={newPostContent}\r\n          onChange={(e) => setNewPostContent(e.target.value)}\r\n          className=\"w-full p-2 mb-4 border border-gray-400 dark:border-gray-600 rounded-lg\"\r\n        />\r\n        <button\r\n          onClick={handleCreatePost}\r\n          className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700\"\r\n        >\r\n          Postar\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"grid gap-4\">\r\n        {posts.length === 0 ? (\r\n          <p>Nenhum post encontrado.</p>\r\n        ) : (\r\n          posts.map((post) => (\r\n            <div\r\n              key={post.id}\r\n              className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-md\"\r\n            >\r\n              <h2 className=\"text-xl font-semibold mb-2\">{post.title}</h2>\r\n              <p>{post.content}</p>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAYe,SAAS;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU,EAAE;IAC7C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,QAAQ,aAAa,OAAO,CAAC;QACnC,IAAI,CAAC,OAAO;YACV,OAAO,IAAI,CAAC,MAAM,+CAA+C;YACjE;QACF;QAEA,MAAM,YAAY;YAChB,IAAI;gBACF,MAAM,OAAO,MAAM,CAAA,GAAA,sHAAA,CAAA,aAAU,AAAD;gBAC5B,SAAS;YACX,EAAE,OAAO,KAAK;gBACZ,SAAS;YACX,SAAU;gBACR,WAAW;YACb;QACF;QAEA;IACF,GAAG;QAAC;KAAO;IAEX,MAAM,mBAAmB;QACvB,IAAI,CAAC,gBAAgB,CAAC,gBAAgB;YACpC,MAAM;YACN;QACF;QAEA,IAAI;YACF,MAAM,UAAU,MAAM,CAAA,GAAA,sHAAA,CAAA,aAAU,AAAD,EAAE;gBAAE,OAAO;gBAAc,SAAS;YAAe;YAChF,SAAS;gBAAC;mBAAY;aAAM;YAC5B,gBAAgB;YAChB,kBAAkB;QACpB,EAAE,OAAO,KAAK;YACZ,SAAS;QACX;IACF;IAEA,IAAI,SAAS;QACX,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;0BAAE;;;;;;;;;;;IAGT;IAEA,IAAI,OAAO;QACT,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;0BAAG;;;;;;;;;;;IAGV;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAA0B;;;;;;0BAExC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAA6B;;;;;;kCAC3C,8OAAC;wBACC,MAAK;wBACL,aAAY;wBACZ,OAAO;wBACP,UAAU,CAAC,IAAM,gBAAgB,EAAE,MAAM,CAAC,KAAK;wBAC/C,WAAU;;;;;;kCAEZ,8OAAC;wBACC,aAAY;wBACZ,OAAO;wBACP,UAAU,CAAC,IAAM,kBAAkB,EAAE,MAAM,CAAC,KAAK;wBACjD,WAAU;;;;;;kCAEZ,8OAAC;wBACC,SAAS;wBACT,WAAU;kCACX;;;;;;;;;;;;0BAKH,8OAAC;gBAAI,WAAU;0BACZ,MAAM,MAAM,KAAK,kBAChB,8OAAC;8BAAE;;;;;2BAEH,MAAM,GAAG,CAAC,CAAC,qBACT,8OAAC;wBAEC,WAAU;;0CAEV,8OAAC;gCAAG,WAAU;0CAA8B,KAAK,KAAK;;;;;;0CACtD,8OAAC;0CAAG,KAAK,OAAO;;;;;;;uBAJX,KAAK,EAAE;;;;;;;;;;;;;;;;AAW1B","debugId":null}}]
}